name: build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set deterministic env
        run: |
          echo "SOURCE_DATE_EPOCH=1734825600" >> $GITHUB_ENV
          echo "LC_ALL=C" >> $GITHUB_ENV

      - name: Toolchain
        run: |
          set -euxo pipefail
          sudo apt-get update
          # toolchain + ISO tools
          sudo apt-get install -y build-essential binutils xorriso mtools dosfstools uuid-dev gnu-efi
          # add QEMU + OVMF firmware for the smoke test
          sudo apt-get install -y qemu-system-x86 ovmf

      - name: Build
        run: make

      - name: Build ISO
        run: make iso

      - name: Size gate (kernel ≤ 512 KiB)
        run: ./scripts/size_gate.sh kernel.bin 524288

      - name: ISO size gate (≤ 32 MiB, conditional)
        run: |
          if [ -f iso/sovrn.iso ]; then
            ./scripts/size_gate.sh iso/sovrn.iso 33554432
          else
            echo "No ISO yet — skipping"
          fi

      - name: UEFI smoke (serial)
        shell: bash
        run: |
          set -euo pipefail
          # find OVMF CODE
          CODE="/usr/share/OVMF/OVMF_CODE.fd"
          if [ ! -f "$CODE" ]; then
            CODE=$(ls /usr/share/OVMF/OVMF_CODE*.fd 2>/dev/null | head -1 || true)
          fi
          if [ ! -f "$CODE" ]; then
            echo "OVMF CODE firmware not found"; ls -l /usr/share/OVMF || true; exit 2
          fi

          VARS="$(mktemp -t ovmf_vars).fd"
          qemu-img create -f raw "$VARS" 4M >/dev/null
          mkdir -p out

          # run QEMU headless; always tee to a log so artifact step can upload it
          /usr/bin/timeout 25s qemu-system-x86_64 \
            -machine q35 -m 256 -serial stdio -display none -no-reboot \
            -drive if=pflash,format=raw,readonly=on,file="$CODE" \
            -drive if=pflash,format=raw,file="$VARS" \
            -boot order=d,menu=off \
            -cdrom iso/sovrn.iso \
            | tee out/qemu-uefi-serial.log || true

          # assert banner appeared
          if grep -q "SOVRN ENGINE ONLINE" out/qemu-uefi-serial.log; then
            echo "Smoke OK: banner observed on serial."
          else
            echo "Smoke FAILED. Last 120 lines:"
            tail -n 120 out/qemu-uefi-serial.log || true
            exit 1
          fi

      - name: Upload serial log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qemu-uefi-serial
          path: out/qemu-uefi-serial.log
          if-no-files-found: warn

      - name: EFI verify (conditional)
        run: bash scripts/efi_verify.sh || true

      - name: SHA256SUMS
        run: ./scripts/mksums.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: phase-artifacts
          path: |
            kernel.bin
            out/BUILDINFO
            out/BANNER.txt
            out/SHA256SUMS
            iso/sovrn.iso
            boot/BOOTX64.EFI
            boot/mbr.bin
          if-no-files-found: warn
