name: Gate 2A â€” Smoke (BIOS+UEFI)

on:
  push:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install host deps (QEMU + OVMF)
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 ovmf xorriso

      - name: Build tool image
        run: docker build -t sovrn-efi .

      - name: Build BIOS+UEFI and ISO inside container
        run: |
          set -euxo pipefail
          docker run --rm -v "$PWD":/work -w /work --entrypoint /bin/sh sovrn-efi -euxc '
            scripts/buildinfo.sh
            scripts/build_uefi.sh
            scripts/build_bios.sh
            scripts/esp_sync.sh
            scripts/mkiso.sh
          '
          ls -lh iso/sovrn.iso out/stage2.bin boot/BOOTX64.EFI isoroot/EFI/BOOT/BOOTX64.EFI
          test -s iso/sovrn.iso

      - name: BIOS smoke (legacy, capture serial)
        run: |
          set -euxo pipefail
          timeout 25s qemu-system-i386 \
            -machine pc -display none -no-reboot \
            -serial stdio \
            -cdrom "$PWD/iso/sovrn.iso" -boot order=d \
            | tee bios.log || true
          grep -F "SOVRN ENGINE ONLINE" bios.log

      - name: UEFI smoke (OVMF, capture serial)
        run: |
          set -euxo pipefail
          # Discover OVMF firmware paths on the GitHub runner
          ovmf_code=$(ls /usr/share/OVMF/OVMF_CODE*.fd 2>/dev/null | head -n1 || true)
          ovmf_vars=$(ls /usr/share/OVMF/OVMF_VARS*.fd 2>/dev/null | head -n1 || true)
          if [ -z "$ovmf_code" ] || [ -z "$ovmf_vars" ]; then
            ovmf_code=$(dpkg -L ovmf | grep -E "/OVMF_CODE[^/]*\.fd$" | head -n1 || true)
            ovmf_vars=$(dpkg -L ovmf | grep -E "/OVMF_VARS[^/]*\.fd$" | head -n1 || true)
          fi
          if [ -z "$ovmf_code" ] || [ -z "$ovmf_vars" ]; then
            echo "Could not locate OVMF firmware files" >&2
            echo "Contents of /usr/share/OVMF:"; ls -lah /usr/share/OVMF || true
            echo "dpkg -L ovmf:"; dpkg -L ovmf || true
            exit 1
          fi
          cp "$ovmf_vars" "$PWD/OVMF_VARS.fd"
          chmod u+w "$PWD/OVMF_VARS.fd"
          echo "OVMF_CODE: $ovmf_code"
          echo "OVMF_VARS: $ovmf_vars"
          timeout 25s qemu-system-x86_64 \
            -machine q35 -display none -no-reboot \
            -serial stdio \
            -drive if=pflash,format=raw,readonly=on,file="$ovmf_code" \
            -drive if=pflash,format=raw,file="$PWD/OVMF_VARS.fd" \
            -cdrom "$PWD/iso/sovrn.iso" -boot order=d \
            | tee uefi.log || true
          grep -F "SOVRN ENGINE ONLINE" uefi.log

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gate2a-artifacts
          path: |
            iso/sovrn.iso
            isoroot/EFI/BOOT/BOOTX64.EFI
            bios.log
            uefi.log
